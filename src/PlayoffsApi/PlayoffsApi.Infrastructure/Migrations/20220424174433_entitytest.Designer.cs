// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlayoffsApi.Infrastructure;

#nullable disable

namespace PlayoffsApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220424174433_entitytest")]
    partial class entitytest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayoffsApi.Domain.Weathers.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("integer");

                    b.Property<int>("TemperatureF")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Weather");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca4e57d4-87a4-4b1f-88ab-24f1d344c451"),
                            Date = new DateTime(2022, 4, 25, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8597),
                            Summary = "Cool",
                            TemperatureC = 49,
                            TemperatureF = 120
                        },
                        new
                        {
                            Id = new Guid("d2098dc3-8bf3-4488-8853-9dfc93804101"),
                            Date = new DateTime(2022, 4, 26, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8785),
                            Summary = "Sweltering",
                            TemperatureC = 24,
                            TemperatureF = 75
                        },
                        new
                        {
                            Id = new Guid("cbe99199-8384-4b67-a2bb-718f757d6838"),
                            Date = new DateTime(2022, 4, 27, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8792),
                            Summary = "Bracing",
                            TemperatureC = 22,
                            TemperatureF = 71
                        },
                        new
                        {
                            Id = new Guid("0c85cf38-aa37-4b11-a67e-def0ecb006ef"),
                            Date = new DateTime(2022, 4, 28, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8796),
                            Summary = "Cool",
                            TemperatureC = 23,
                            TemperatureF = 73
                        },
                        new
                        {
                            Id = new Guid("da792482-3721-4059-8f66-78fd7d8ee341"),
                            Date = new DateTime(2022, 4, 29, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8800),
                            Summary = "Scorching",
                            TemperatureC = 29,
                            TemperatureF = 84
                        },
                        new
                        {
                            Id = new Guid("cb6bba76-bea6-4bd6-91d4-376f194acc9a"),
                            Date = new DateTime(2022, 4, 30, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8804),
                            Summary = "Mild",
                            TemperatureC = 15,
                            TemperatureF = 58
                        },
                        new
                        {
                            Id = new Guid("5018a7d4-976c-4d00-aecf-1e543e7b81cb"),
                            Date = new DateTime(2022, 5, 1, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8809),
                            Summary = "Warm",
                            TemperatureC = 5,
                            TemperatureF = 40
                        },
                        new
                        {
                            Id = new Guid("48fe7442-f058-463f-9359-b2c1490d1aa9"),
                            Date = new DateTime(2022, 5, 2, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8812),
                            Summary = "Cool",
                            TemperatureC = 20,
                            TemperatureF = 67
                        },
                        new
                        {
                            Id = new Guid("a84d8d51-c925-4f2f-8c7d-c979ae3e0db8"),
                            Date = new DateTime(2022, 5, 3, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8816),
                            Summary = "Sweltering",
                            TemperatureC = 1,
                            TemperatureF = 33
                        },
                        new
                        {
                            Id = new Guid("dc475e09-859c-4be6-b5f6-287811aa41da"),
                            Date = new DateTime(2022, 5, 4, 19, 44, 32, 834, DateTimeKind.Local).AddTicks(8826),
                            Summary = "Cool",
                            TemperatureC = 15,
                            TemperatureF = 58
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
