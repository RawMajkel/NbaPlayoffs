// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlayoffsApi.Infrastructure;

#nullable disable

namespace PlayoffsApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220424131415_nexttest")]
    partial class nexttest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayoffsApi.Domain.Weathers.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("integer");

                    b.Property<int>("TemperatureF")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Weather");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9011ebf3-2c93-4208-88c4-ad212f7bc088"),
                            Date = new DateTime(2022, 4, 25, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8864),
                            Summary = "Freezing",
                            TemperatureC = 31,
                            TemperatureF = 87
                        },
                        new
                        {
                            Id = new Guid("6a29b27c-9db1-4c6e-aeb6-55e682aa6c68"),
                            Date = new DateTime(2022, 4, 26, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8924),
                            Summary = "Warm",
                            TemperatureC = 10,
                            TemperatureF = 49
                        },
                        new
                        {
                            Id = new Guid("390dcffc-aae8-4c94-85a8-a61483d072c0"),
                            Date = new DateTime(2022, 4, 27, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8927),
                            Summary = "Cool",
                            TemperatureC = -7,
                            TemperatureF = 20
                        },
                        new
                        {
                            Id = new Guid("c7cb4021-71a2-4e2a-956a-90f7f336ccc7"),
                            Date = new DateTime(2022, 4, 28, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8930),
                            Summary = "Chilly",
                            TemperatureC = 44,
                            TemperatureF = 111
                        },
                        new
                        {
                            Id = new Guid("dce9aa72-c89d-4afb-bbeb-e5951d3504f2"),
                            Date = new DateTime(2022, 4, 29, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8940),
                            Summary = "Freezing",
                            TemperatureC = 3,
                            TemperatureF = 37
                        },
                        new
                        {
                            Id = new Guid("db20a32e-a10d-4c86-abc5-3f38e40280ea"),
                            Date = new DateTime(2022, 4, 30, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8943),
                            Summary = "Hot",
                            TemperatureC = -8,
                            TemperatureF = 18
                        },
                        new
                        {
                            Id = new Guid("059fcfd7-e4dd-4e78-b666-51c4610b589f"),
                            Date = new DateTime(2022, 5, 1, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8945),
                            Summary = "Scorching",
                            TemperatureC = -6,
                            TemperatureF = 22
                        },
                        new
                        {
                            Id = new Guid("f38d7432-798a-43a6-a32c-84f1fac8c711"),
                            Date = new DateTime(2022, 5, 2, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8948),
                            Summary = "Chilly",
                            TemperatureC = -12,
                            TemperatureF = 11
                        },
                        new
                        {
                            Id = new Guid("8310bd52-7519-4d94-ae6f-6093795e7598"),
                            Date = new DateTime(2022, 5, 3, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8950),
                            Summary = "Sweltering",
                            TemperatureC = 45,
                            TemperatureF = 112
                        },
                        new
                        {
                            Id = new Guid("d831e576-6f25-4bf4-b8e7-b2c85805c36b"),
                            Date = new DateTime(2022, 5, 4, 15, 14, 14, 887, DateTimeKind.Local).AddTicks(8952),
                            Summary = "Bracing",
                            TemperatureC = 8,
                            TemperatureF = 46
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
